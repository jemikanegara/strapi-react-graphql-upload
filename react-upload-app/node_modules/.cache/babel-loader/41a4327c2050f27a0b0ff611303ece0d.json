{"ast":null,"code":"var _jsxFileName = \"/Users/strnegara/Desktop/ylp/react-strapi-upload/react-app/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport ApolloClient, { gql } from 'apollo-boost';\nimport { ApolloProvider, useMutation } from '@apollo/react-hooks';\nconst UPLOAD_DOCUMENT = gql`\n  mutation UploadDocument($documents: [Upload]){\n    createLawfirmDocument (input: {data: {Documents: $documents}}){\n      lawfirmDocument {\n        Documents {\n          name\n        }\n      }\n    }\n  }\n`;\nconst client = new ApolloClient({\n  uri: 'http://localhost:1337/graphql'\n});\n\nfunction App() {\n  const [files, setFiles] = React.useState(null);\n  const [uploadDocument, {\n    data,\n    loading,\n    error\n  }] = React.useMutation(UPLOAD_DOCUMENT);\n  return React.createElement(ApolloProvider, {\n    client: client,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"file\",\n    value: files,\n    onChange: e => {\n      setFiles(e.target.files);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/strnegara/Desktop/ylp/react-strapi-upload/react-app/src/App.js"],"names":["React","ApolloClient","gql","ApolloProvider","useMutation","UPLOAD_DOCUMENT","client","uri","App","files","setFiles","useState","uploadDocument","data","loading","error","e","target"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,WAAP;AACA,OAAOC,YAAP,IAAsBC,GAAtB,QAAgC,cAAhC;AACA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,qBAA5C;AAEA,MAAMC,eAAe,GAAGH,GAAI;;;;;;;;;;CAA5B;AAYA,MAAMI,MAAM,GAAG,IAAIL,YAAJ,CAAiB;AAC9BM,EAAAA,GAAG,EAAE;AADyB,CAAjB,CAAf;;AAIA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,KAAK,CAACW,QAAN,CAAe,IAAf,CAA1B;AACA,QAAM,CAACC,cAAD,EAAiB;AAACC,IAAAA,IAAD;AAAOC,IAAAA,OAAP;AAAiBC,IAAAA;AAAjB,GAAjB,IAA4Cf,KAAK,CAACI,WAAN,CAAkBC,eAAlB,CAAlD;AACA,SACE,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAEC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAEG,KAA1B;AAAiC,IAAA,QAAQ,EAAEO,CAAC,IAAI;AAC9CN,MAAAA,QAAQ,CAACM,CAAC,CAACC,MAAF,CAASR,KAAV,CAAR;AACD,KAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADA,CADF;AASD;;AAED,eAAeD,GAAf","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport ApolloClient, {gql} from 'apollo-boost';\nimport { ApolloProvider, useMutation } from '@apollo/react-hooks';\n\nconst UPLOAD_DOCUMENT = gql`\n  mutation UploadDocument($documents: [Upload]){\n    createLawfirmDocument (input: {data: {Documents: $documents}}){\n      lawfirmDocument {\n        Documents {\n          name\n        }\n      }\n    }\n  }\n`\n\nconst client = new ApolloClient({\n  uri: 'http://localhost:1337/graphql',\n});\n\nfunction App() {\n  const [files, setFiles] = React.useState(null)\n  const [uploadDocument, {data, loading , error}] = React.useMutation(UPLOAD_DOCUMENT)\n  return (\n    <ApolloProvider client={client}>\n    <div className=\"App\">\n      <input type=\"file\" value={files} onChange={e => {\n        setFiles(e.target.files)\n      }}></input>\n    </div>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}