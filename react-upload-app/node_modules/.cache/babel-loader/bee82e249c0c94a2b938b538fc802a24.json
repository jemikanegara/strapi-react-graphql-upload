{"ast":null,"code":"import { ReactNativeFile } from './ReactNativeFile';\nexport function extractFiles(value, path) {\n  if (path === void 0) {\n    path = '';\n  }\n\n  var clone;\n  var files = new Map();\n\n  function addFile(paths, file) {\n    var storedPaths = files.get(file);\n    if (storedPaths) storedPaths.push.apply(storedPaths, paths);else files.set(file, paths);\n  }\n\n  if (typeof File !== 'undefined' && value instanceof File || typeof Blob !== 'undefined' && value instanceof Blob || value instanceof ReactNativeFile) {\n    clone = null;\n    addFile([path], value);\n  } else {\n    var prefix = path ? path + '.' : '';\n    if (typeof FileList !== 'undefined' && value instanceof FileList) clone = Array.prototype.map.call(value, function (file, i) {\n      addFile(['' + prefix + i], file);\n      return null;\n    });else if (Array.isArray(value)) clone = value.map(function (child, i) {\n      var result = extractFiles(child, '' + prefix + i);\n      result.files.forEach(addFile);\n      return result.clone;\n    });else if (value && value.constructor === Object) {\n      clone = {};\n\n      for (var i in value) {\n        var result = extractFiles(value[i], '' + prefix + i);\n        result.files.forEach(addFile);\n        clone[i] = result.clone;\n      }\n    } else clone = value;\n  }\n\n  return {\n    clone: clone,\n    files: files\n  };\n}","map":{"version":3,"sources":["/Users/strnegara/Desktop/ylp/react-strapi-upload/react-app/node_modules/extract-files/lib/extractFiles.mjs"],"names":["ReactNativeFile","extractFiles","value","path","clone","files","Map","addFile","paths","file","storedPaths","get","push","apply","set","File","Blob","prefix","FileList","Array","prototype","map","call","i","isArray","child","result","forEach","constructor","Object"],"mappings":"AAAA,SAASA,eAAT,QAAgC,mBAAhC;AACA,OAAO,SAASC,YAAT,CAAsBC,KAAtB,EAA6BC,IAA7B,EAAmC;AACxC,MAAIA,IAAI,KAAK,KAAK,CAAlB,EAAqB;AACnBA,IAAAA,IAAI,GAAG,EAAP;AACD;;AAED,MAAIC,KAAJ;AACA,MAAIC,KAAK,GAAG,IAAIC,GAAJ,EAAZ;;AAEA,WAASC,OAAT,CAAiBC,KAAjB,EAAwBC,IAAxB,EAA8B;AAC5B,QAAIC,WAAW,GAAGL,KAAK,CAACM,GAAN,CAAUF,IAAV,CAAlB;AACA,QAAIC,WAAJ,EAAiBA,WAAW,CAACE,IAAZ,CAAiBC,KAAjB,CAAuBH,WAAvB,EAAoCF,KAApC,EAAjB,KACKH,KAAK,CAACS,GAAN,CAAUL,IAAV,EAAgBD,KAAhB;AACN;;AAED,MACG,OAAOO,IAAP,KAAgB,WAAhB,IAA+Bb,KAAK,YAAYa,IAAjD,IACC,OAAOC,IAAP,KAAgB,WAAhB,IAA+Bd,KAAK,YAAYc,IADjD,IAEAd,KAAK,YAAYF,eAHnB,EAIE;AACAI,IAAAA,KAAK,GAAG,IAAR;AACAG,IAAAA,OAAO,CAAC,CAACJ,IAAD,CAAD,EAASD,KAAT,CAAP;AACD,GAPD,MAOO;AACL,QAAIe,MAAM,GAAGd,IAAI,GAAGA,IAAI,GAAG,GAAV,GAAgB,EAAjC;AACA,QAAI,OAAOe,QAAP,KAAoB,WAApB,IAAmChB,KAAK,YAAYgB,QAAxD,EACEd,KAAK,GAAGe,KAAK,CAACC,SAAN,CAAgBC,GAAhB,CAAoBC,IAApB,CAAyBpB,KAAzB,EAAgC,UAASO,IAAT,EAAec,CAAf,EAAkB;AACxDhB,MAAAA,OAAO,CAAC,CAAC,KAAKU,MAAL,GAAcM,CAAf,CAAD,EAAoBd,IAApB,CAAP;AACA,aAAO,IAAP;AACD,KAHO,CAAR,CADF,KAKK,IAAIU,KAAK,CAACK,OAAN,CAActB,KAAd,CAAJ,EACHE,KAAK,GAAGF,KAAK,CAACmB,GAAN,CAAU,UAASI,KAAT,EAAgBF,CAAhB,EAAmB;AACnC,UAAIG,MAAM,GAAGzB,YAAY,CAACwB,KAAD,EAAQ,KAAKR,MAAL,GAAcM,CAAtB,CAAzB;AACAG,MAAAA,MAAM,CAACrB,KAAP,CAAasB,OAAb,CAAqBpB,OAArB;AACA,aAAOmB,MAAM,CAACtB,KAAd;AACD,KAJO,CAAR,CADG,KAMA,IAAIF,KAAK,IAAIA,KAAK,CAAC0B,WAAN,KAAsBC,MAAnC,EAA2C;AAC9CzB,MAAAA,KAAK,GAAG,EAAR;;AAEA,WAAK,IAAImB,CAAT,IAAcrB,KAAd,EAAqB;AACnB,YAAIwB,MAAM,GAAGzB,YAAY,CAACC,KAAK,CAACqB,CAAD,CAAN,EAAW,KAAKN,MAAL,GAAcM,CAAzB,CAAzB;AACAG,QAAAA,MAAM,CAACrB,KAAP,CAAasB,OAAb,CAAqBpB,OAArB;AACAH,QAAAA,KAAK,CAACmB,CAAD,CAAL,GAAWG,MAAM,CAACtB,KAAlB;AACD;AACF,KARI,MAQEA,KAAK,GAAGF,KAAR;AACR;;AAED,SAAO;AACLE,IAAAA,KAAK,EAAEA,KADF;AAELC,IAAAA,KAAK,EAAEA;AAFF,GAAP;AAID","sourcesContent":["import { ReactNativeFile } from './ReactNativeFile'\nexport function extractFiles(value, path) {\n  if (path === void 0) {\n    path = ''\n  }\n\n  var clone\n  var files = new Map()\n\n  function addFile(paths, file) {\n    var storedPaths = files.get(file)\n    if (storedPaths) storedPaths.push.apply(storedPaths, paths)\n    else files.set(file, paths)\n  }\n\n  if (\n    (typeof File !== 'undefined' && value instanceof File) ||\n    (typeof Blob !== 'undefined' && value instanceof Blob) ||\n    value instanceof ReactNativeFile\n  ) {\n    clone = null\n    addFile([path], value)\n  } else {\n    var prefix = path ? path + '.' : ''\n    if (typeof FileList !== 'undefined' && value instanceof FileList)\n      clone = Array.prototype.map.call(value, function(file, i) {\n        addFile(['' + prefix + i], file)\n        return null\n      })\n    else if (Array.isArray(value))\n      clone = value.map(function(child, i) {\n        var result = extractFiles(child, '' + prefix + i)\n        result.files.forEach(addFile)\n        return result.clone\n      })\n    else if (value && value.constructor === Object) {\n      clone = {}\n\n      for (var i in value) {\n        var result = extractFiles(value[i], '' + prefix + i)\n        result.files.forEach(addFile)\n        clone[i] = result.clone\n      }\n    } else clone = value\n  }\n\n  return {\n    clone: clone,\n    files: files\n  }\n}\n"]},"metadata":{},"sourceType":"module"}