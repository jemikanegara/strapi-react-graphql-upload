{"ast":null,"code":"var _jsxFileName = \"/Users/strnegara/Desktop/ylp/react-strapi-upload/react-app/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport ApolloClient, { gql } from 'apollo-boost-upload';\nimport { ApolloProvider, useMutation } from '@apollo/react-hooks';\nconst UPLOAD_DOCUMENT = gql`\nmutation (\n  $ref: String \n  $refId: ID\n  $field: String\n  $files: [Upload]!\n  ){\n  multipleUpload (\n    ref: $ref\n    refId: $refId\n    field: $field\n    files: $files\n  ){\n   \tname\n  }\n}\n`;\nconst client = new ApolloClient({\n  uri: 'http://localhost:1337/graphql'\n});\n\nfunction UploadDoc() {\n  const [ref, setRef] = React.useState('lawfirm-documents');\n  const [refId, setRefId] = React.useState('1');\n  const [field, setField] = React.useState('Documents');\n  const [files, setFiles] = React.useState(null);\n  const [uploadDocument, {\n    data,\n    loading,\n    error\n  }] = useMutation(UPLOAD_DOCUMENT);\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"file\",\n    multiple: true,\n    onChange: e => {\n      setFiles([...e.target.files]);\n      const variables = {\n        ref,\n        refId,\n        field,\n        files: e.target.files\n      };\n      e.target.validity.valid && uploadDocument({\n        variables\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }));\n}\n\nfunction App() {\n  return React.createElement(ApolloProvider, {\n    client: client,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(UploadDoc, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/strnegara/Desktop/ylp/react-strapi-upload/react-app/src/App.js"],"names":["React","ApolloClient","gql","ApolloProvider","useMutation","UPLOAD_DOCUMENT","client","uri","UploadDoc","ref","setRef","useState","refId","setRefId","field","setField","files","setFiles","uploadDocument","data","loading","error","e","target","variables","validity","valid","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,YAAP,IAAsBC,GAAtB,QAAgC,qBAAhC;AACA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,qBAA5C;AAEA,MAAMC,eAAe,GAAGH,GAAI;;;;;;;;;;;;;;;;CAA5B;AAkBA,MAAMI,MAAM,GAAG,IAAIL,YAAJ,CAAiB;AAC9BM,EAAAA,GAAG,EAAE;AADyB,CAAjB,CAAf;;AAIA,SAASC,SAAT,GAAqB;AACnB,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBV,KAAK,CAACW,QAAN,CAAe,mBAAf,CAAtB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,KAAK,CAACW,QAAN,CAAe,GAAf,CAA1B;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBf,KAAK,CAACW,QAAN,CAAe,WAAf,CAA1B;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBjB,KAAK,CAACW,QAAN,CAAe,IAAf,CAA1B;AACA,QAAM,CAACO,cAAD,EAAiB;AAACC,IAAAA,IAAD;AAAOC,IAAAA,OAAP;AAAiBC,IAAAA;AAAjB,GAAjB,IAA4CjB,WAAW,CAACC,eAAD,CAA7D;AACA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,MAA3B;AAA4B,IAAA,QAAQ,EAAEiB,CAAC,IAAI;AACzCL,MAAAA,QAAQ,CAAC,CAAC,GAAGK,CAAC,CAACC,MAAF,CAASP,KAAb,CAAD,CAAR;AACA,YAAMQ,SAAS,GAAG;AAChBf,QAAAA,GADgB;AAEhBG,QAAAA,KAFgB;AAGhBE,QAAAA,KAHgB;AAIhBE,QAAAA,KAAK,EAAEM,CAAC,CAACC,MAAF,CAASP;AAJA,OAAlB;AAMAM,MAAAA,CAAC,CAACC,MAAF,CAASE,QAAT,CAAkBC,KAAlB,IAA2BR,cAAc,CAAC;AAACM,QAAAA;AAAD,OAAD,CAAzC;AACD,KATD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAcD;;AAED,SAASG,GAAT,GAAe;AACX,SACA,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAErB,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADA;AAKH;;AAED,eAAeqB,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport ApolloClient, {gql} from 'apollo-boost-upload';\nimport { ApolloProvider, useMutation } from '@apollo/react-hooks';\n\nconst UPLOAD_DOCUMENT = gql`\nmutation (\n  $ref: String \n  $refId: ID\n  $field: String\n  $files: [Upload]!\n  ){\n  multipleUpload (\n    ref: $ref\n    refId: $refId\n    field: $field\n    files: $files\n  ){\n   \tname\n  }\n}\n`\n\nconst client = new ApolloClient({\n  uri: 'http://localhost:1337/graphql',\n});\n\nfunction UploadDoc() {\n  const [ref, setRef] = React.useState('lawfirm-documents')\n  const [refId, setRefId] = React.useState('1')\n  const [field, setField] = React.useState('Documents')\n  const [files, setFiles] = React.useState(null)\n  const [uploadDocument, {data, loading , error}] = useMutation(UPLOAD_DOCUMENT)\n  return (\n    <div className=\"App\">\n      <input type=\"file\" multiple onChange={e => {\n        setFiles([...e.target.files])\n        const variables = {\n          ref,\n          refId,\n          field,\n          files: e.target.files\n        }\n        e.target.validity.valid && uploadDocument({variables})\n      }}></input>\n    </div>\n  );\n}\n\nfunction App() {\n    return (\n    <ApolloProvider client={client}>\n    <UploadDoc />\n    </ApolloProvider>\n  );\n} \n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}